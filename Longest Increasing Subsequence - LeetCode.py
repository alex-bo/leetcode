from typing import List


class Solution:
    def lengthOfLIS(self, nums: List[int]) -> int:
        return patience_sort_optimized_no_piles_solution(nums)
        # return patience_sort_solution(nums)
        # return bottom_up_solution(nums)


def bottom_up_solution(nums: List[int]) -> int:
    dp = [1 for _ in nums]
    for i, n in enumerate(nums):
        if i == 0:
            continue
        for j in range(i):
            if nums[j] < nums[i]:
                dp[i] = max(dp[i], dp[j] + 1)
    return max(dp)


def bottom_up_recursive_solution(nums: List[int], prev_i: int, i: int, cache: List[List[int]]) -> int:
    if i >= len(nums):
        return 0

    if cache[prev_i][i] < 0:
        res = 0

        # try include current element if prev is less than it
        if prev_i < 0 or nums[i] > nums[prev_i]:
            res = max(res, bottom_up_recursive_solution(nums, i, i + 1, cache) + 1)

        # try exclude current element
        cache[prev_i][i] = max(res, bottom_up_recursive_solution(nums, prev_i, i + 1, cache))
    return cache[prev_i][i]


def patience_sort_optimized_no_piles_solution(nums: List[int]) -> int:
    if not nums:
        return 0
    piles = []
    for i in range(len(nums)):
        add_num_optimized(i, piles, nums)
    return len(piles)


def add_num_optimized(index: int, piles: List[int], nums: List[int]):
    num = nums[index]
    lo, hi = 0, len(piles)
    while lo < hi:
        mid = (hi + lo) // 2
        if num <= piles[mid]:
            # move left
            hi = mid
        else:
            # move right
            lo = mid + 1
    if lo == len(piles):
        piles.append(num)
    piles[lo] = num


def patience_sort_solution(nums: List[int]) -> int:
    if not nums:
        return 0
    piles = []
    for i in range(len(nums)):
        add_num(i, piles, nums)
    return len(piles)


def add_num(index: int, piles: List[List[int]], nums: List[int]):
    num = nums[index]
    lo, hi = 0, len(piles)
    while lo < hi:
        mid = (hi + lo) // 2
        if num <= piles[mid][-1]:
            # move left
            hi = mid
        else:
            # move right
            lo = mid + 1
    if lo == len(piles):
        piles.append([])
    piles[lo].append(num)


if __name__ == '__main__':
    print(3, Solution().lengthOfLIS([4, 10, 4, 3, 8, 9]))
    print(4, Solution().lengthOfLIS([0, 1, 0, 3, 2, 3]))
    print(1, Solution().lengthOfLIS([7, 7, 7, 7, 7, 7, 7]))
    print(74, Solution().lengthOfLIS(
        [-614, 337, -881, -640, -484, -266, 977, 243, -725, 388, -336, 137, 399, 492, 232, -734, -945, -393, 323, 583,
         -634, 403, 353, 223, -162, 707, -556, -958, -307, -633, -417, 677, -341, 382, 192, 495, -121, 524, 967, -653,
         -309, 554, 501, 392, 437, -421, -408, -36, -176, -861, -699, 72, 945, 38, -95, -236, 154, -847, 922, 729, -895,
         -104, 882, -104, -774, -923, 472, 567, -720, -392, -618, 195, 786, -76, 301, -940, -554, -747, 335, -155, -254,
         987, -235, 920, -165, -4, 692, 799, 296, -562, 73, 328, 273, 665, 233, 139, 602, -606, -471, -804, 199, 731,
         777, -777, 266, 363, -606, -593, 776, 710, 951, 546, -797, 955, 436, 221, 103, 336, 590, -583, 980, -640, 810,
         961, 558, -174, -630, -443, 380, 401, -739, 821, 837, 374, -423, 222, -13, -147, -999, -275, 683, -846, 770,
         111, -533, 183, 521, 410, 46, 444, -699, -444, -323, 619, 486, 530, 556, -779, -776, -589, 451, 406, 387, -814,
         -857, -618, 959, 915, 547, -976, -132, 311, 45, -579, -969, -633, 682, 411, 347, 647, -902, 515, -581, 643,
         -42, 697, -875, -763, 165, -18, 633, 722, 491, -71, -542, -944, 32, -48, -561, -564, 235, 788, 443, 996, 765,
         787, 282, 909, 366, 440, -898, 865, -92, 320, 410, 185, -912, 894, -121, 78, 450, -886, -968, 198, -803, -235,
         498, -638, -967, 684, -375, -972, 209, -772, -567, -890, 125, -182, 307, 456, -94, 918, 943, 671, -437, -651,
         62, 98, -926, 774, 437, 453, 297, 237, -335, 316, 20, -591, 122, 650, 880, -689, 376, -764, -235, 353, 982,
         -945, -967, -198, 546, 695, 312, 156, 26, 810, 749, -161, -483, -711, 201, 961, 340, 135, -746, 339, -420, 500,
         -104, 550, -462, 346, 130, -65, -103, -537, 986, 78, -896, -273, -256, -10, 822, -875, -889, -723, -463, 685,
         987, -634, -900, -139, 990, 845, 52, -968, -150, 938, -374, 611, -114, 120, -202, 512, -859, -131, 213, 413,
         -19, 273, -916, 507, 890, -355, -493, -49, -924, -661, -159, -426, -245, -283, -152, -114, 821, -412, 311,
         -923, 406, 72, 284, 887, -882, 656, -46, 303, 976, -600, -158, -53, -773, -738, 697, -962, 646, 700, 886, -211,
         -97, 646, -253, -406, 205, 276, 772, -438, 942, -363, -104, 511, -873, 202, -504, 474, 67, 920, -917, 627, 520,
         -182, 219, 497, -483, 205, 879, -457, -586, 256, 260, -613, -834, 209, 348, 577, -282, 922, 767, -684, 15, 680,
         964, -876, 392, -951, 971, -1000, -687, 475, -621, -441, 354, -364, -212, 979, 679, -992, -787, 266, -44, -720,
         475, 370, -748, -649, -922, 669, 923, -738, -370, 63, -125, 622, 289, 949, -871, -471, 658, -670, -194, -527,
         33, 244, 75, 106, 671, -910, 980, 432, -169, 237, 80, -57, 531, 926, -930, 243, 261, -642, 479, 58, -293, -862,
         907, -86, -496, 359, -247, 389, 353, -673, -728, 521, -164, -216, -271, 659, -255, -377, -582, 690, -988, -593,
         -971, 989, 157, -848, 192, -334, -284, -910, -722, -342, -2, -924, -935, -859, 336, -117, -296, 74, 726, -420,
         -686, -677, -207, 118, -505, -562, -331, -218, 20, 825, 497, 626, 978, -67, 270, 354, 81, -943, 759, -989,
         -770, -497, -773, 655, -822, -645, 719, -482, 217, -669, -56, -509, 717, 793, -174, 761, -927, -667, 90, -370,
         -889, 501, 654, 789, 955, -974, -371, 459, -732, -203, 639, -844, -669, 392, -77, 835, -450, 696, 201, 475,
         -724, -318, -843, -156, 318, -245, -34, -857, -604, -345, 11, 799, 276, -244, -914, -404, 604, -538, 307, -793,
         918, 102, -103, 24, -984, -376, 730, -379, 284, -873, -993, 543, -665, 904, 859, -995, -356, 140, -826, 20,
         -505, 568, -650, -253, -87, -558, 887, -594, -228, -295, 662, 113, -377, -445, 723, 572, 844, -296, -463, 715,
         -933, -665, -497, 422, 317, -935, 780, -700, 107, -116, 21, 341, -221, 136, -448, -663, 531, -258, -887, 540,
         859, 963, -890, 784, -751, -19, -310, -509, 409, -452, 39, -121, -85, 497, 154, 738, -667, 560, -18, -282, 433,
         118, -476, -817, 667, 424, -126, -809, 133, -825, -415, 669, 147, 361, 751, -579, -816, -745, -305, 540, -295,
         -201, -230, 391, 652, 482, 934, 119, 273, -312, -431, -752, -94, -427, -594, -453, 983, -113, 291, 749, 452,
         710, -183, 78, 457, -185, -413, -615, 950, -816, 122, 107, -295, -461, 868, 369, -324, -64, -837, 201, -68,
         -949, -832, -106, 922, -436, -470, 704, -618, -386, 150, -61, 181, -365, 150, 209, -25, -976, 740, -898, -706,
         -994, -920, 409, -15, 239, 795, 142, -821, -968, 236, -74, -753, 51, -189, 718, 225, 873, 1000, 459, 587, -649,
         -559, 256, -147, 173, 812, -412, -200, -348, 855, 234, -738, 368, 332, -658, 169, 203, -708, 577, 321, -834,
         -696, 23, -48, 795, -924, 565, -129, -483, -709, 718, -748, -581, 569, 386, -88, -124, 251, -737, 36, -410,
         104, -741, 855, -625, 889, -305, -314, 978, 689, -683, 137, 123, -276, -279, -293, 43, 982, -951, 500, 387,
         138, -481, 409, 132, -639, 110, 227, 445, 16, -265, -575, -967, 166, 384, 9, 659, -948, 252, -162, 826, 280,
         -435, -46, 895, -272, -878, -161, 953, -161, -501, -502, -62, 720, 316, -827, 54, 230, 318, 872, 18, 794, -996,
         959, 47, 74, 195, 363, -35, 705, 411, 861, -230, -290, -791, -127, 829, -84, -710, -427, -689, -170, 564, 309,
         -851, 427, 53, -454, 830, -859, -58, -613, 260, -496, -266, -658, -208, 816, -249, 22, -247, 498, -806, 642,
         386, 181, 88, -747, 853, -690, -180, 251, -627, 140, 622, -406, 783, 138, -992, -637, 938, -432, -12, 498,
         -939, 68, 827, 314, 199, -260, -189, -6, 62, 90, -78, -614, -867, -92, 830, -324, -791, 690, -419, -600, -764,
         -328, -980, 369, -193, -851, -292, -489, 252, -616, -359, 394, -998, 705, 916, 268, -429, 923, 876, -260, -97,
         460, 925, -356, 397, 321, -848, 380, -425, 924, -318, -910, 534, 84, -200, -874, 671, -671, 687, 777, -889,
         -61, -986, -225, 944, 250, -731, -652, 187, 2, 639, -780, 627, -243, 282, 279, 688, 62, 130, 975, -875, -105,
         995, -402, 536, 99, -439, 565, -939, 332, 147, -782, 512, 637, 33, -470, 483, 609, -956, 929, -683, 556, -132,
         567, 406, 41, 144, -265, -679, 893, 213, 210, -991, 785, -34, 704, 314, -658, -425, -94, 519, -106, 796, 924,
         162, 841, 644, -551, 633, 504, -363, -950, -307, 329, 102, 921, 800, 636, 340, 775, 575, -320, 290, 650, 145,
         501, -911, -422, 989, -482, 659, 50, -777, 184, 196, 848, -902, 254, 12, 83, -37, -995, -254, -673, 477, 36,
         104, 531, 54, 783, 990, 303, 739, -249, 38, 110, -831, -542, 72, -306, 312, -956, -469, 838, -356, -146, -26,
         -573, 740, 428, -623, 769, 177, -404, -254, 395, -808, -844, 859, -896, -13, -105, -798, -520, 128, 567, 206,
         -309, 654, 575, 10, 811, 407, -735, -579, -346, 218, -48, 355, -375, 159, 790, 297, -817, -278, 652, 412, 854,
         -899, -497, 780, 593, 515, -272, 202, -445, 466, -234, -171, 619, -237, -694, 615, -712, -860, 645, -851, 443,
         -796, 851, 480, 618, 496, -951, -241, -720, -826, 991, -161, 341, 233, 559, 373, -268, 124, -459, 289, -973,
         226, -986, -172, -152, -241, -933, -304, -978, -14, -167, 475, -203, -24, 690, 431, 922, 39, -24, 562, -519,
         683, -373, -952, 848, 796, 16, 819, -491, 166, -973, 518, 601, 159, -818, -331, -192, 869, 957, 14, -436, 409,
         -986, -541, 466, 371, -803, -796, 172, 349, -148, 162, 968, 709, -538, -629, -478, -484, 783, -933, 639, 268,
         -184, -663, -392, -658, -990, -679, -306, -198, 42, 315, -973, 889, 55, 603, -873, -627, 135, 367, -782, -699,
         216, 398, -90, 393, 197, -183, 356, -596, 607, 368, -583, 857, 254, 480, 868, -367, -317, -442, 125, -594, 259,
         543, -891, 586, 389, 821, 196, -596, 592, -646, -615, 84, -287, -893, 577, -28, -50, 367, -354, 967, 201, -540,
         756, 967, 621, 17, -414, 62, 48, -357, -54, -197, -490, -975, 962, -459, -496, 739, 985, -28, 350, 761, -74,
         -228, 783, -566, 149, 851, 591, 256, 618, 110, -871, 295, 691, 675, 996, -389, 334, 756, -454, 981, -749, -901,
         507, 117, 140, -651, -317, -358, -57, 850, -110, -726, 868, -412, 598, 936, -847, 505, 470, -683, -656, 373,
         214, -481, -125, -647, 471, -658, -358, 903, 921, -95, 502, 820, 561, 90, -281, 228, -292, 994, 305, -651,
         -297, 845, 658, 242, 928, -862, 638, 440, -497, 883, 670, -23, 410, -605, -288, -624, -898, 3, -704, -491, 584,
         -133, 772, -575, 514, -927, 896, 141, -799, -14, -180, -371, 827, -127, -655, -745, 163, 679, 555, -594, 545,
         -491, -301, 447, -27, 112, -695, 471, -43, -884, -177, -208, 719, -436, 909, -387, 439, 970, 263, 884, -34,
         770, 218, 252, 607, 922, 147, -441, -242, -217, -544, -121, 819, -921, -825, -402, -60, 429, 817, 490, -685,
         -556, 895, 572, -543, -390, 508, -306, 451, 541, -812, -921, 307, 4, -174, 91, -686, 511, 448, 378, -405, 86,
         161, -676, -793, -643, -206, -85, 974, 495, 572, -170, 604, 587, 734, -944, -652, 314, 96, -251, -451, 574,
         114, 415, 964, -82, 773, -72, -792, -867, -276, -738, 523, 480, -572, 645, 929, -670, 890, -674, -952, -708,
         -181, -953, -893, 292, -215, -255, -96, 33, -226, -11, -237, 921, -873, 743, -702, -454, 811, -23, -497, 420,
         490, -720, -349, -909, 123, 296, 134, 423, -768, -491, 603, 426, 924, 367, 554, -543, 258, 536, 829, 286, 770,
         -215, -485, -556, -987, -340, -780, -455, 423, 380, 510, 566, -644, -471, 416, 715, -128, -294, 695, 267, -331,
         -627, 465, -649, 627, -829, 772, -222, 68, -189, 260, 921, 329, 510, 892, 606, 989, 107, 369, -205, 660, 728,
         815, -430, -718, 922, -914, 565, -219, -191, 485, 740, -45, -852, -851, -983, 639, -209, -264, 220, -722, 772,
         -197, 207, -744, 907, -602, 609, -461, 912, -531, -913, -287, 112]))
